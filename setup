#!/bin/bash
BASHRC_LAST_LINE=$(grep "." ~/.bashrc | tail -1)

UNAME=$(uname -s)
case $UNAME in
	Linux*) PLATFORM="LINUX";;
	CYGWIN*) PLATFORM="CYGWIN";;
	MINGW*) PLATFORM="MINGW";;
	*) PLATFORM="UNKOWN";;
esac

clean() {
	echo "Removing old installation"

	rm -rf ~/.config/nvim/
	rm -rf ~/.config/i3/
	rm -f ~/.config/scottrc
	rm -f ~/.config/gitrc
	rm -f ~/.gitconfig
	rm -f ~/.vimrc
	rm -f ~/.bashrc
}

baseInstall() {
	echo "Copying dotfiles"
	SOURCE=$1

	shopt -s dotglob
	cp -r $SOURCE/home/* ~/
	shopt -u dotglob
}

configureNeovim() {
	echo "Configuring vim"

	mkdir -p ~/.config/nvim/plugged/youcompleteme

	if [[ $PLATFORM -ne "LINUX" ]]; then
		ln -s ~/.config/nvim ~/C:/Users/$USER/AppData/Local/nvim
	fi

	curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim > /dev/null 2>&1
	pip3 install --upgrade neovim
	nvim +'PlugInstall --sync' +qa
	pushd ~/.config/nvim/plugged/youcompleteme
		python3 install.py --clang-completer
	popd
}

configureGit() {
	echo "Configuring git"

	gitversionfull=($(git --version))
	if [[ $? -eq 0 ]]; then
		echo "Found a valid git installation"

		gitversion=${gitversionfull[-1]}
		requiredver="2.16.0"
		echo "git version is $gitversion"
		if [ "$(printf '%s\n%s\n' "$gitversion" "$requiredver" | sort -V | head -n1)" = "$requiredver" ]; then
			echo "Git version greater than $requiredver"
		else
			echo "Found git version less than $requiredver, wrapping status save with status push."
			echo "source ~/.config/gitrc" >> ~/.bashrc
		fi

	else
		echo "Git not found, skipping git configuration"
	fi
}

if [[ $1 == "full" ]]; then
	clean
	baseInstall .
	configureNeovim
	configureGit
elif [[ $! == "win" ]] || [[ $1 == "windows" ]]; then
	clean
else
	# expects scottrc to be located here,
	# allows quick to be executed from anywhere
	baseInstall /home/$USER/src/scottrc
fi

